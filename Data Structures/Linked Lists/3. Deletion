class Node:
    def __init__(self,data):
        self.data=data
        self.next=None
    
class LinkedList:
    def __init__(self):
        self.head=None
    
    def printList(self):
        temp=self.head
        while (temp!=None):
            print(temp.data)
            temp=temp.next
    
    def push(self,new_data):
        new_node = Node(new_data)
        new_node.next = self.head
        
        self.head = new_node
    
    def insertAfter(self,prev_node,new_data):
        if prev_node is None:
            print("Node not in Linked List")
            return
        
        new_node = Node(new_data)
        new_node.next=prev_node.next
        prev_node.next = new_node
        
    def append(self,new_data):
        new_node = Node(new_data)
        
        if self.head is None:
            self.head = new_node
            return
        last = self.head
        while(last.next!=None):
            last = last.next
        
        last.next= new_node
    def delete(self, key):
        temp = self.head
        
        if temp is not None:
            if temp.data==key:
                self.head = temp.next
                temp = None
                return
        while(temp is not None):
            if temp.data==key:
                break
            prev=temp
            temp=temp.next
        if temp==None:
            return
        prev.next = temp.next
        temp = None
        
if __name__=='__main__': 
    l = LinkedList() 
    l.push(7) 
    l.push(1) 
    l.push(3) 
    l.push(2) 
    print("Created Linked List: ")
    l.printList() 
    l.delete(1)  
    print("\nLinked List after Deletion of 1:")
    l.printList() 
