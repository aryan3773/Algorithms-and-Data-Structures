# Using list
stack = []
stack.append('a') 
stack.append('b') 
stack.append('c') 
  
print('Initial stack') 
print(stack) 

print('\nElements poped from stack:') 
print(stack.pop()) 
print(stack.pop()) 
print(stack.pop()) 
  
print('\nStack after elements are poped:') 
print(stack) 

# Using collections.dequeue

from collections import deque 
  
stack = deque()

stack.append('a') 
stack.append('b') 
stack.append('c') 
  
print('Initial stack:') 
print(stack) 

print('\nElements poped from stack:') 
print(stack.pop()) 
print(stack.pop()) 
print(stack.pop()) 
  
print('\nStack after elements are poped:') 
print(stack)

# USing queue
from queue import LifoQueue 

stack = LifoQueue(maxsize = 3)
print(stack.qsize())

stack.put('a') 
stack.put('b') 
stack.put('c') 
  
print("Full: ", stack.full())  
print("Size: ", stack.qsize())  

print('\nElements poped from the stack') 
print(stack.get()) 
print(stack.get()) 
print(stack.get()) 
  
print("\nEmpty: ", stack.empty()) 
